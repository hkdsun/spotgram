#!/usr/bin/env ruby

# require "spotgram"
require "telegram/bot"
require 'open3'

LINKS_RE = /(^(http|https):\/\/[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(([0-9]{1,5})?\/.*)?$)/ix
TELEGRAM_TOKEN = "***REMOVED***"
STORAGE_DIR = "/tmp/"

def get_yt_link(msg)
  matches = msg.match(LINKS_RE)
  first_link = matches && matches[0].split(" ")[0]
  return unless first_link
  cmd = [
    "spotdl",
    "-d",
    "-s",
    first_link
  ]

  _, stderr, status = Open3.capture3(*cmd)
  if status.success?
    matches = stderr.match(/(http.*)\)/)
    return matches && matches[1]
  end
end

def get_youtube_dl_filename(yt_link)
  stdout, stderr, status = Open3.capture3(
    "youtube-dl",
    "--get-filename",
    "--audio-format",
    "mp3",
    "-o",
    "./tmp/downloads/%(title)s.mp3",
    yt_link
  )

  if status.success?
    return stdout.chomp
  else
    puts "failed to get filename"
    puts stdout, stderr
  end
end

def get_yt_mp3(yt_link)
  output_filename = get_youtube_dl_filename(yt_link)
  return unless output_filename

  stdout, stderr, status = Open3.capture3(
    "youtube-dl",
    "--extract-audio",
    "--continue",
    "--no-post-overwrites",
    "--no-overwrites",
    "--ignore-errors",
    "--add-metadata",
    "--audio-format",
    "mp3",
    "--audio-quality",
    "0",
    "--no-mtime",
    "-o",
    "./tmp/downloads/%(title)s.%(ext)s",
    yt_link,
  )

  if status.success?
    puts "downloaded successfully"
    return output_filename
  else
    puts "failed to download"
    puts stdout, stderr
  end
end

Telegram::Bot::Client.run(TELEGRAM_TOKEN) do |bot|
  bot.listen do |message|
    case message.text
    when '/start'
      bot.api.send_message(chat_id: message.chat.id, text: "Hello, #{message.from.first_name}")
    else
      puts message.text
      first_msg = bot.api.send_message(chat_id: message.chat.id, text: "Let me find your song on youtube")
      next unless first_msg['ok']

      yt_link = get_yt_link(message.text)
      if yt_link
        bot.api.edit_message_text(
          chat_id: message.chat.id,
          message_id: first_msg['result']['message_id'],
          text: "Found this on youtube.. let me convert it..\n#{yt_link}",
          disable_web_page_preview: true
        )
      else
        bot.api.send_message(chat_id: message.chat.id, text: "Couldnt convert Spotify to Youtube, sorry")
        next
      end

      filename = get_yt_mp3(yt_link)
      if filename
        bot.api.edit_message_text(
          chat_id: message.chat.id,
          message_id: first_msg['result']['message_id'],
          text: "I have the file ready. Uploading it on my slowass internet now"
        )

        bot.api.send_audio(chat_id: message.chat.id, audio: Faraday::UploadIO.new(filename, 'audio/mp3'))
      else
        bot.api.send_message(chat_id: message.chat.id, text: "Couldnt download that youtube link, sorry")
      end
    end
  end
end

